# Ejemplo de secrets para Kubernetes
# IMPORTANTE: Este archivo es solo un ejemplo. Los valores reales deben ser:
# 1. Generados de forma segura
# 2. Almacenados en un gestor de secretos (Vault, AWS Secrets Manager, etc.)
# 3. Nunca committeados al repositorio

apiVersion: v1
kind: Secret
metadata:
  name: partio-secrets
  namespace: partio
  labels:
    app: partio
type: Opaque
data:
  # Todos los valores deben estar en base64
  # Para generar: echo -n "valor" | base64
  
  # Base de datos PostgreSQL
  database-url: cG9zdGdyZXNxbDovL3VzZXI6cGFzc3dvcmRAaG9zdDo1NDMyL2RhdGFiYXNl # postgresql://user:password@host:5432/database
  
  # Redis
  redis-url: cmVkaXM6Ly86cGFzc3dvcmRAaG9zdDo2Mzc5 # redis://:password@host:6379
  
  # JWT Secret (generar con: openssl rand -base64 32)
  jwt-secret: c3VwZXItc2VjcmV0LWp3dC1rZXktY2hhbmdlLWluLXByb2R1Y3Rpb24= # super-secret-jwt-key-change-in-production
  
  # Webhooks de pagos
  mercadopago-webhook-secret: bWVyY2Fkb3BhZ28td2ViaG9vay1zZWNyZXQ= # mercadopago-webhook-secret
  stripe-webhook-secret: c3RyaXBlLXdlYmhvb2stc2VjcmV0 # stripe-webhook-secret

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: partio-config
  namespace: partio
  labels:
    app: partio
data:
  # Configuraciones no sensibles
  cors-origin: "https://partio.com,https://app.partio.com"
  log-level: "info"
  rate-limit-window: "900000"
  rate-limit-max: "100"
  
  # Configuración de base de datos
  db-pool-min: "2"
  db-pool-max: "10"
  
  # Configuración de Redis
  redis-pool-min: "5"
  redis-pool-max: "20"

---
# Namespace para la aplicación
apiVersion: v1
kind: Namespace
metadata:
  name: partio
  labels:
    name: partio
    environment: production

---
# NetworkPolicy para seguridad
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: partio-network-policy
  namespace: partio
spec:
  podSelector:
    matchLabels:
      app: partio-api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 4000
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 53    # DNS
    - protocol: UDP
      port: 53    # DNS
    - protocol: TCP
      port: 443   # HTTPS outbound
