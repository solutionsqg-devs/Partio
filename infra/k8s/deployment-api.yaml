# Kubernetes Deployment para Partio API
# Incluye Deployment, Service, HPA y configuraciones de producci√≥n

apiVersion: apps/v1
kind: Deployment
metadata:
  name: partio-api
  namespace: partio
  labels:
    app: partio-api
    version: v1
    component: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: partio-api
  template:
    metadata:
      labels:
        app: partio-api
        version: v1
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: api
        image: partio/api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 4000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "4000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: partio-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: partio-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: partio-secrets
              key: jwt-secret
        - name: JWT_EXPIRES_IN
          value: "7d"
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: partio-config
              key: cors-origin
        - name: LOG_LEVEL
          value: "info"
        - name: RATE_LIMIT_WINDOW_MS
          value: "900000"
        - name: RATE_LIMIT_MAX_REQUESTS
          value: "100"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      securityContext:
        fsGroup: 1001
      serviceAccountName: partio-api
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: partio-api-service
  namespace: partio
  labels:
    app: partio-api
    component: backend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 4000
    protocol: TCP
    name: http
  selector:
    app: partio-api

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: partio-api-hpa
  namespace: partio
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: partio-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: partio-api
  namespace: partio
  labels:
    app: partio-api

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: partio-api-ingress
  namespace: partio
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.partio.com
    secretName: partio-api-tls
  rules:
  - host: api.partio.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: partio-api-service
            port:
              number: 80

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: partio-api-pdb
  namespace: partio
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: partio-api
