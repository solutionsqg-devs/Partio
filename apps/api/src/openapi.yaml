openapi: 3.0.3
info:
  title: Partio API
  description: API para SaaS de gastos compartidos
  version: 1.0.0
  contact:
    name: Partio Team
    email: support@partio.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:4000
    description: Desarrollo local
  - url: https://api.partio.com
    description: Producción

security:
  - BearerAuth: []

paths:
  /health:
    get:
      summary: Health check
      tags:
        - System
      security: []
      responses:
        '200':
          description: API funcionando correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /auth/signup:
    post:
      summary: Registrar nuevo usuario
      tags:
        - Authentication
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'

  /auth/signin:
    post:
      summary: Iniciar sesión
      tags:
        - Authentication
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigninRequest'
      responses:
        '200':
          description: Sesión iniciada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/profile:
    get:
      summary: Obtener perfil del usuario
      tags:
        - Authentication
      responses:
        '200':
          description: Perfil del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /groups:
    get:
      summary: Obtener grupos del usuario
      tags:
        - Groups
      responses:
        '200':
          description: Lista de grupos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

    post:
      summary: Crear nuevo grupo
      tags:
        - Groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
      responses:
        '201':
          description: Grupo creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /groups/{id}:
    get:
      summary: Obtener detalle de un grupo
      tags:
        - Groups
      parameters:
        - $ref: '#/components/parameters/GroupId'
      responses:
        '200':
          description: Detalle del grupo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDetailResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /groups/{id}/expenses:
    get:
      summary: Obtener gastos de un grupo
      tags:
        - Expenses
      parameters:
        - $ref: '#/components/parameters/GroupId'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: Lista de gastos del grupo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpensesResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

    post:
      summary: Crear nuevo gasto en el grupo
      tags:
        - Expenses
      parameters:
        - $ref: '#/components/parameters/GroupId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExpenseRequest'
      responses:
        '201':
          description: Gasto creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    GroupId:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: ID del grupo

    Page:
      name: page
      in: query
      schema:
        type: integer
        minimum: 1
        default: 1
      description: Número de página

    Limit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      description: Elementos por página

  schemas:
    # Responses básicas
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        error:
          type: string

    HealthResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                timestamp:
                  type: string
                  format: date-time
                environment:
                  type: string

    # Authentication
    SignupRequest:
      type: object
      required:
        - email
        - password
        - name
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
        name:
          type: string
          minLength: 2

    SigninRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        avatar:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    AuthResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/User'
                accessToken:
                  type: string

    UserResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/User'

    # Groups
    CreateGroupRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 2
        description:
          type: string
          nullable: true
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          default: USD

    Group:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        currency:
          type: string
        ownerId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    GroupResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Group'

    GroupsResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Group'

    GroupDetailResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              allOf:
                - $ref: '#/components/schemas/Group'
                - type: object
                  properties:
                    members:
                      type: array
                      items:
                        type: object
                        properties:
                          user:
                            $ref: '#/components/schemas/User'
                          role:
                            type: string
                            enum: [OWNER, ADMIN, MEMBER]
                    balances:
                      type: array
                      items:
                        type: object
                        properties:
                          userId:
                            type: string
                          userName:
                            type: string
                          balance:
                            type: number

    # Expenses
    CreateExpenseRequest:
      type: object
      required:
        - title
        - amount
        - splits
      properties:
        title:
          type: string
          minLength: 2
        description:
          type: string
          nullable: true
        amount:
          type: number
          minimum: 0.01
        currency:
          type: string
          pattern: '^[A-Z]{3}$'
          default: USD
        category:
          type: string
          nullable: true
        splits:
          type: array
          items:
            type: object
            required:
              - userId
              - amount
              - type
            properties:
              userId:
                type: string
              amount:
                type: number
              type:
                type: string
                enum: [EQUAL, EXACT, PERCENTAGE]

    Expense:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
          nullable: true
        amount:
          type: number
        currency:
          type: string
        category:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time

    ExpenseResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Expense'

    ExpensesResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Expense'
            pagination:
              type: object
              properties:
                page:
                  type: integer
                limit:
                  type: integer
                total:
                  type: integer
                totalPages:
                  type: integer

  responses:
    BadRequest:
      description: Solicitud inválida
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'

    Unauthorized:
      description: No autorizado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'

    Forbidden:
      description: Prohibido
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'

    NotFound:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'

    Conflict:
      description: Conflicto
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
